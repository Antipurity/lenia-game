{
  "description": "Bloody hell, why are there so many fluid simulations in the local neighborhood?",

  "onLoad": "new Array(30000).fill().forEach(() => level.actors['liner'+Math.random()] = {like:'liner1', pos:[.5+.01*(Math.random()*2-1), Math.random()], onLost(api, level, name) {level.score += 100/30000, level.actors[name].displayRadius=[0,0,0], api.write(name)}}); \n (async function() { if (Math.random()<.3) api._x2_3_enters = api._x2_3_enters+1||1;  for (let i=0; i<(api._x2_3_enters||0); ++i) api.window([{tag:'i', style:'font-size:.85em'}, `oo`], [Math.random(), Math.random()]) })()",
  "winScore": 99,
  "onWon": "(async function() { api.levelSuggest('levels/x2/4.json'); \n for (let i=0; i<9; ++i) level.iMixing[i]*=1.5;  await api.window(`OI\n\nFAIRY\n\nMY BELOVED\n\nI  FOUND  YOU`, null, 32);  await api.window(`DON'T RUN OFF LIKE THAT`, null, 32);  await api.window(`Foo. Foo.\nDid I bore you that much?`, null, 32);  await api.window(`Okay, if you insist, no more chairs, no more rest.`, null, 32);  await api.window(`I'm gonna need ya to get me outta here, kay?\nI've had enough magic to last a lifetime.`, null, 32);  api.levelLoad('levels/x2/4.json') })()",

  "onLost": "for (let i=0; i<9; ++i) level.iMixing[i]*=.95;  api.window([`(LOST)`, `(A rapid stream of multipurpose liquid.\n Repurpose it.\n 20 seconds or less.)`, `(Move quickly.\n Accomplish nothing.)`, `(Move slowly.\n Trail colorful explosions.\n Accomplish nothing.)`, `(Move just right.\n Colors will heed your command.)`, `(These repurposing channels leak.)`, `(Plug leaks with more leaky channels.)`, `(Refine your control.\n Plug your channels.)`, `(Refine your strategy and make it work.)`, `(Also, arrow keys and shift plus arrow keys can work as a control scheme, given a keyboard.)`, `(Refine your strategy and make it work.)`, `(Fluid cells repurpose themselves back when left unmolested,\n so molest them as frequently as you can.\n Minimize gaps.)`, `(Refine your strategy and make it work.)`, `(Refine your strategy and make it work.)`, `(Stop whining and start getting good.\n Who taught you to whine?\n There are clear numbers to optimize in this task.\n Frustration will not affect them.)`, `(Did you know that humans cannot survive in space, nor can travel at the speed of light?\n Although not currently inhabited, space is the primary use-case for us information beings.\n Build the future, one task at a time.)`, `(Okay, I'll just loop my words now.)`][(api._x2_3 = api._x2_3+1||0) % 17], 'pointer1', 32).then(() => api.levelLoad())",

  "iColorMatrix": [
    1, 0, 0, 0,
    0, 1, 0, 0,
    0, 0, 1, 0,
    0, 0, 0, 1
  ],

  "width": 512, "height": 512, "radius": 4,
  "iSlowdown": 5,

  "iMixing":[1.05,-3,0.95,0.246,0.47,-2,-3,0.43,0.54],"kernel":{"center":[0.5,0.5,0.5],"width":[0.14,0.14,0.14]},"iGrowthCenter":[0.4,0.2,0.4],"iGrowthWidth":[0.08,0.142,0.1],
  "iOffset": [0,0], "iKernelOffset": [0,0],

  "actors": {
    "pointer1": {"displayRadius":[0,0,10], "pos":[0.25, 0.25], "emitRadius":8, "emit":"blue", "emittance":3, "speed":{"Bmouse":0.01, "Bspeed": 0.93}, "dhealth":{"B1":-0.000833333333333333}, "trackLost":true},
    "pointer2": {"displayRadius":[0,0,0], "pos":[0.5, 0.25], "emitRadius":8, "emit":"green", "emittance":0, "speed":{"Btarget":0.01, "Bspeed": 0.93}, "target":"pointer1"},
    "pointer3": {"displayRadius":[0,0,0], "pos":[0.5, 0.25], "emitRadius":8, "emit":"green", "emittance":0, "speed":{"Btarget":0.01, "Bspeed": 0.93}, "target":"pointer2"},
    "liner1": {"displayRadius":[4,0,0], "pos":[0.5, 0.5], "speed":{"Bspeed":0.99, "Bb":-0.01, "Bg":0.003, "Br":0.01, "Bhealth":1}, "dhealth":{"Bb":-0.1, "B1":-0.003, "Bhealth": 0.004}, "gravity":[0, -0.0002]},
    "center": {"pos":[0.5, 0.5]}
  }
}